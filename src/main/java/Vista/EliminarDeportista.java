/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Controlador.ConsultasDeportista;
import Controlador.ConsultasDisciplinas;
import Modelo.Conexion;
import Modelo.Deportistas;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class EliminarDeportista extends javax.swing.JInternalFrame {

    /**
     * Creates new form EliminarDeportista
     */
    public EliminarDeportista() {
        initComponents();
        
        cargarDisciplinas();
        
        listDeportes.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Habilitar el botón cuando se seleccione un elemento
            String deporteSeleccionado = listDeportes.getSelectedItem().toString();
            if (deporteSeleccionado.equals("Elegir una opción")) {
                // Restablecer la tabla original
                cargarTablaOriginal();
                // Deshabilitar el botón de búsqueda
                btnBuscar.setEnabled(false);
            } else {
                // Habilitar el botón de búsqueda
                btnBuscar.setEnabled(true);
            }
        }
    });

    // Deshabilitar el botón al inicio
    btnBuscar.setEnabled(false);
  
        cargarTablaOriginal();
    }
    
    private void cargarDisciplinas() {
        ConsultasDisciplinas consultasDisciplinas = new ConsultasDisciplinas();
        List<String> disciplinas = consultasDisciplinas.consultarDisciplinas();
        
        listDeportes.removeAllItems();
        
        listDeportes.addItem("Elegir una opción");
        
        for (String disciplina : disciplinas) {
            listDeportes.addItem(disciplina);
        }
    }
    
    private void cargarTablaOriginal() {
    try {
        DefaultTableModel modelo = new DefaultTableModel();
        tblDeportistas.setModel(modelo);
        
        CallableStatement cs = null;
        ResultSet rs = null;
        Conexion conexion = new Conexion();
        Connection con = conexion.getConexion();

        String sql = "{call ConsultarDeportistas()}";
        cs = con.prepareCall(sql);
        rs = cs.executeQuery();

        ResultSetMetaData rsMd = rs.getMetaData();
        int cantidadColumnas = rsMd.getColumnCount();

        modelo.addColumn("Cedula");
        modelo.addColumn("Deporte");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Edad");
        modelo.addColumn("Categoria");
        modelo.addColumn("Genero");

        while (rs.next()) {
            Object[] filas = new Object[cantidadColumnas];

            for (int i = 0; i < cantidadColumnas; i++) {
                filas[i] = rs.getObject(i + 1);
            }

            modelo.addRow(filas);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.toString());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        txtCedula = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDeportistas = new javax.swing.JTable();
        listDeportes = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setAutoscrolls(true);
        setPreferredSize(new java.awt.Dimension(800, 540));

        jPanel1.setBackground(new java.awt.Color(234, 241, 255));

        btnEliminar.setBackground(new java.awt.Color(233, 64, 50));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtCedula.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tblDeportistas.setBackground(new java.awt.Color(244, 244, 244));
        tblDeportistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tblDeportistas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDeportistasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDeportistas);

        listDeportes.setBackground(new java.awt.Color(204, 204, 204));
        listDeportes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir una opción", "Ajedrez", "Basketball", "Boxeo", "Futbol", "Gimnasia", "Karate", "Natación", "Patinaje", "Taekwondo", "Tenis" }));

        btnBuscar.setBackground(new java.awt.Color(67, 133, 243));
        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\USUARIO\\Documents\\Practicas-LigaDeportivaOtavalo\\LDCO\\src\\main\\resource\\Imagenes\\TituloEliminar.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Ingresar el Numero de Cedula que Desea Eliminar");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Elegir la Disciplina Deportiva que Desea Buscar");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Puede Elegir al Deportista de la Lista de Registros");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(16, 16, 16)
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(listDeportes, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(71, 71, 71))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel4)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(listDeportes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(btnBuscar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar))
                        .addGap(101, 101, 101)))
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String cedula = txtCedula.getText();
    
    // Verificar si el campo de cédula está vacío
    if (cedula.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingresa una cédula.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Instanciar la clase ConsultasDeportista
    ConsultasDeportista consultasDeportista = new ConsultasDeportista();
    
    // Crear un objeto Deportistas con la cédula ingresada
    Deportistas deportista = new Deportistas();
    deportista.setCedula(cedula);
    
    // Llamar al método eliminar de ConsultasDeportista
    boolean eliminado = consultasDeportista.eliminar(deportista);
    
    // Verificar si se eliminó correctamente o no
    if (eliminado) {
        JOptionPane.showMessageDialog(this, "Deportista eliminado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        // Limpiar el campo de cédula después de eliminar
        txtCedula.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "Error al eliminar el deportista.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblDeportistasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDeportistasMouseClicked
        
        int selectedRow = tblDeportistas.getSelectedRow();
    if (selectedRow != -1) {
        String cedula = tblDeportistas.getValueAt(selectedRow, 0).toString();
        txtCedula.setText(cedula);
    }
    }//GEN-LAST:event_tblDeportistasMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
        DefaultTableModel modelo = new DefaultTableModel();
        tblDeportistas.setModel(modelo);

        CallableStatement cs = null;
        ResultSet rs = null;
        Conexion conexion = new Conexion();
        Connection con = conexion.getConexion();

        String deporteSeleccionado = listDeportes.getSelectedItem().toString();

        String sql = "{call ListaDeportistaDeporte('" + deporteSeleccionado + "')}";
        cs = con.prepareCall(sql);
        rs = cs.executeQuery();

        ResultSetMetaData rsMd = rs.getMetaData();
        int cantidadColumnas = rsMd.getColumnCount();

        modelo.addColumn("Cedula");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Edad");
        modelo.addColumn("Categoria");
        modelo.addColumn("Genero");

        while (rs.next()) {
            Object[] filas = new Object[cantidadColumnas];

            for (int i = 0; i < cantidadColumnas; i++) {
                filas[i] = rs.getObject(i + 1);
            }

            modelo.addRow(filas);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.toString());
    }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> listDeportes;
    private javax.swing.JTable tblDeportistas;
    public javax.swing.JTextField txtCedula;
    // End of variables declaration//GEN-END:variables
}
